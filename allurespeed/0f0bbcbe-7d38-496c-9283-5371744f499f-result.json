{"name": "Basic PPPoE Test", "status": "failed", "statusDetails": {"message": "TimeoutError: [Errno 110] Connection timed out", "trace": "fixturefunc = <function check_configure_service at 0x7f92fdb3c3a0>, request = <FixtureRequest for <Function test_basic_pppoe_test>>\nkwargs = {'service': 'VIPoE'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\nvenv/lib/python3.8/site-packages/_pytest/fixtures.py:908: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/step_defs/test_optical_fiber_network.py:18: in check_configure_service\n    return check_and_configure_service(service)\ncode_files/ssh_network_conf/ssh_network_conf.py:90: in check_and_configure_service\n    tn = initiate_connection()\ncode_files/ssh_network_conf/ssh_network_conf.py:58: in initiate_connection\n    tn.open(HOST)\n/usr/lib/python3.8/telnetlib.py:235: in open\n    self.sock = socket.create_connection((host, port), timeout)\n/usr/lib/python3.8/socket.py:808: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('192.168.1.1', 23), timeout = <object object at 0x7f92fdedd5c0>, source_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        err = None\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/usr/lib/python3.8/socket.py:796: TimeoutError"}, "steps": [{"name": "Given Internet connectivity is there", "status": "passed", "start": 1678443273450, "stop": 1678443273609}, {"name": "When I configure \"VIPoE\"", "status": "failed", "statusDetails": {"message": "[Errno 110] Connection timed out", "trace": "TimeoutError: [Errno 110] Connection timed out\n"}, "start": 1678443273609, "stop": 1678443404420}], "start": 1678443273450, "stop": 1678443404420, "uuid": "5aee4ce8-a344-282d-766b-5acda9d49974", "historyId": "5aee4ce8a344282d766b5acda9d49974", "fullName": "features/test_optical_fiber_network.feature:Basic PPPoE Test", "labels": [{"name": "host", "value": "user-OptiPlex-3050"}, {"name": "thread", "value": "11047-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Test Optical Fiber Network"}]}